{"version":3,"sources":["./node_modules/angular-web-storage/fesm2015/angular-web-storage.js","./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.scss","./src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sEAAgB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;AAChM;AACA,IAAI,gEAAU,EAAE,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sEAAgB,EAAE,oDAAoD,oCAAoC,EAAE,oDAAoD;AACxM;AACA,IAAI,gEAAU,EAAE,qBAAqB;AACrC;AACA;;AAEA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAQ;AACZ;;AAEA;AACA;AACA;;AAE6H;AAC7H;;;;;;;;;;;;AC3MA,0mBAA0mB,sDAAsD,WAAW,GAAG,MAAM,8KAA8K,iBAAiB,oC;;;;;;;;;;;;;;;;;;;;;;;ACA10B;AACM;AACF;AACA;AACE;AACe;AAEvB;AACG;AAwB1C,IAAa,cAAc,GAA3B,MAAa,cAAc;CAE1B;AAFY,cAAc;IAtB1B,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oIAA6B;;KAE9B,CAAC;IAED,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,2EAAuB;YACvB,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC;gBACpB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,mDAAQ;iBACpB;aACF,CAAC;SACH;QACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;KACzB,CAAC;GAEW,cAAc,CAE1B;AAF0B;;;;;;;;;;;;AChC3B,2BAA2B,mCAAmC,GAAG,6CAA6C,2iB;;;;;;;;;;;;;;;;;;ACA5D;AAC6D;AAO/G,IAAa,QAAQ,GAArB,MAAa,QAAQ;IAEnB,YAAmB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;QAE7C,gCAAgC;QAChC,UAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,SAAI,GAAG,EAAE,CAAC;QAuBV,2BAA2B;QAC3B,eAAU,GAAG,EAAE,CAAC;IA5BgC,CAAC;IAMjD,uDAAuD;IACvD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,EAAE;SAChB;QACD,uBAAuB;QACvB,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YAChC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;YACpC,OAAO;SACR;QAED,wBAAwB;QACxB,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;YAAC,OAAO;SAAC;QAC/B,4CAA4C;QAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAKD,oCAAoC;IACpC,MAAM,CAAC,GAAG,EAAG,GAAG;QACd,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QAC9D,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,kCAAkC;IAClC,UAAU;QACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjE,CAAC;CACF;;YAxC2B,uEAAmB;;AAFlC,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oIAA6B;;KAE9B,CAAC;2EAG0B,uEAAmB;GAFlC,QAAQ,CA0CpB;AA1CoB","file":"home-home-module.js","sourcesContent":["import { defineInjectable, Injectable, NgModule } from '@angular/core';\n\n/**\n * 判断是否在浏览器中渲染Angular应用\n * `decorator` 无法直接使用Angular `PLATFORM_ID` 标识\n * 这带来的好处是当服务端自行填充 Document 时也能很好的识别\n */\nconst isBrowser = typeof document === 'object' && !!document;\nclass StorageUtil {\n    static get(storage, key) {\n        if (storage == null) {\n            return null;\n        }\n        const value = StorageUtil.parse(storage.getItem(key) || 'null') || null;\n        if (value === null)\n            return null;\n        if (typeof value === 'object' &&\n            typeof value._expired !== 'undefined' &&\n            value._expired !== 0 &&\n            +new Date() > value._expired) {\n            StorageUtil.remove(storage, key);\n            return null;\n        }\n        return value._value || null;\n    }\n    static set(storage, key, value, expiredAt = 0, expiredUnit = 't') {\n        if (storage == null) {\n            return;\n        }\n        storage.setItem(key, StorageUtil.stringify({\n            _expired: StorageUtil.getExpired(expiredAt, expiredUnit),\n            _value: value,\n        }));\n    }\n    static remove(storage, key) {\n        if (storage == null) {\n            return;\n        }\n        storage.removeItem(key);\n    }\n    static key(storage, index) {\n        return storage == null ? '' : storage.key(index);\n    }\n    static getExpired(val, unit) {\n        if (val <= 0)\n            return 0;\n        const now = +new Date();\n        switch (unit) {\n            case 's': // 秒\n                return now + 1000 * val;\n            case 'm': // 分\n                return now + 1000 * 60 * val;\n            case 'h': // 时\n                return now + 1000 * 60 * 60 * val;\n            case 'd': // 天\n                return now + 1000 * 60 * 60 * 24 * val;\n            case 'w': // 周\n                return now + 1000 * 60 * 60 * 24 * 7 * val;\n            case 'y': // 年\n                return now + 1000 * 60 * 60 * 24 * 365 * val;\n            case 't': // 自定义\n                return now + val;\n        }\n        return 0;\n    }\n    static stringify(value) {\n        return JSON.stringify(value);\n    }\n    static parse(text) {\n        try {\n            return JSON.parse(text) || null;\n        }\n        catch (e) {\n            return text;\n        }\n    }\n}\n\nconst cache = {};\nfunction WebStorage(storage, key, expiredAt = 0, expiredUnit = 'd') {\n    return (target, propertyName) => {\n        key = key || propertyName;\n        Object.defineProperty(target, propertyName, {\n            get: () => {\n                return StorageUtil.get(storage, key);\n            },\n            set: (value) => {\n                if (!cache[key]) {\n                    const storedValue = StorageUtil.get(storage, key);\n                    if (storedValue === null) {\n                        StorageUtil.set(storage, key, value, expiredAt, expiredUnit);\n                    }\n                    cache[key] = true;\n                    return;\n                }\n                StorageUtil.set(storage, key, value, expiredAt, expiredUnit);\n            },\n            enumerable: true,\n            configurable: true,\n        });\n    };\n}\n/**\n * `localStorage` Decorator\n *\n * @param [expiredAt=0] Expiration time, 0 means forever\n * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])\n */\nfunction LocalStorage(key, expiredAt = 0, expiredUnit = 't') {\n    return WebStorage(isBrowser ? localStorage : null, key, expiredAt, expiredUnit);\n}\n/**\n * `sessionStorage` Decorator\n *\n * @param [expiredAt=0] Expiration time, 0 means forever\n * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])\n */\nfunction SessionStorage(key, expiredAt = 0, expiredUnit = 't') {\n    return WebStorage(isBrowser ? sessionStorage : null, key, expiredAt, expiredUnit);\n}\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nclass StorageService {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    get(key) {\n        return StorageUtil.get(this.storage, key);\n    }\n    set(key, value, expiredAt = 0, expiredUnit = 'd') {\n        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);\n    }\n    /**\n     * 删除指定key，如：\n     * - `remove('key')` 删除 `key` 键\n     * - `remove(/BMap_\\w+/)` 批量删除所有 BMap_ 开头的键\n     * @param key 键名或正则表达式\n     */\n    remove(key) {\n        if (typeof key === 'string') {\n            StorageUtil.remove(this.storage, key);\n            return;\n        }\n        let index = 0;\n        let next = StorageUtil.key(this.storage, index);\n        const ls = [];\n        while (next) {\n            if (key.test(next))\n                ls.push(next);\n            next = StorageUtil.key(this.storage, ++index);\n        }\n        ls.forEach(v => StorageUtil.remove(this.storage, v));\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\nlet LocalStorageService = class LocalStorageService extends StorageService {\n    constructor() {\n        super(isBrowser ? localStorage : null);\n    }\n};\nLocalStorageService.ngInjectableDef = defineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: \"root\" });\nLocalStorageService = __decorate([\n    Injectable({ providedIn: 'root' }),\n    __metadata(\"design:paramtypes\", [])\n], LocalStorageService);\nlet SessionStorageService = class SessionStorageService extends StorageService {\n    constructor() {\n        super(isBrowser ? sessionStorage : null);\n    }\n};\nSessionStorageService.ngInjectableDef = defineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: \"root\" });\nSessionStorageService = __decorate([\n    Injectable({ providedIn: 'root' }),\n    __metadata(\"design:paramtypes\", [])\n], SessionStorageService);\n\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet AngularWebStorageModule = class AngularWebStorageModule {\n};\nAngularWebStorageModule = __decorate$1([\n    NgModule()\n], AngularWebStorageModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularWebStorageModule, LocalStorage, LocalStorageService, SessionStorage, SessionStorageService, StorageService };\n//# sourceMappingURL=angular-web-storage.js.map\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Random name generator\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>  \\n      <div ng-app=\\\"myApp\\\" ng-controller=\\\"customersCtrl\\\"></div>\\n      <ion-item>\\n        <ion-label>Enter Name:</ion-label>\\n        <ion-input [(ngModel)]=\\\"user\\\"></ion-input>\\n      </ion-item>\\n      <ion-button (click)=\\\"sendname()\\\" value=\\\"value\\\" color=\\\"success\\\">Submit</ion-button>\\n    </ion-row>\\n    <ion-row>\\n      <ion-label>Names:</ion-label><br>\\n    </ion-row>\\n      <tr *ngFor=\\\"let name of names; let i = index\\\">\\n        <ion-row>\\n          <td>{{i+1+\\\".\\\"}} {{name}}</td>\\n        </ion-row>\\n      </tr>\\n    <ion-row>\\n      <ion-button (click)=\\\"pickrandom()\\\" color=\\\"success\\\">Pick Random name</ion-button><br>\\n    </ion-row>\\n  <a>{{this.pickedname}}</a>\\n</ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AngularWebStorageModule } from 'angular-web-storage';\n\nimport { HomePage } from './home.page';\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\n\n@NgModule({\n  imports: [\n    AngularWebStorageModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\n\nexport class HomePageModule {\n  \n}\n","module.exports = \".Submit {\\n  background-color: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcVXNlcnNcXHZtYW5lXFxPbmVEcml2ZVxcQnVyZWF1YmxhZFxcUmFuZG9tTmFtZSBHZW5lcmF0b3JcXHJhbmRvbU5hbWVHZW5lcmF0b3Ivc3JjXFxhcHBcXGhvbWVcXGhvbWUucGFnZS5zY3NzIiwic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksOEJBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuU3VibWl0e1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZCgkY29sb3I6ICMwMDAwMDApICFpbXBvcnRhbnQ7XG59XG4iLCIuU3VibWl0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogMCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService, SessionStorageService, LocalStorage, SessionStorage } from 'angular-web-storage';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  \n  constructor(public local: LocalStorageService) {}  \n\n  //list of names stored somewhere\n  names = this.local.get(\"names\");\n  user = \"\";\n\n  //sends the given value to a json/database/localstorage\n  sendname(){\n    console.log(this.user)\n    console.log(this.names)\n    if(this.names === null){\n      this.names = []\n    }\n    //check if user ecxists\n    if(this.names.includes(this.user)){\n      console.log(\"user already excists!\")\n      return;\n    }\n\n    //check if user is empty\n    if (this.user === \"\") {return;}\n    //simply push the new name to the local list\n    this.names.push(this.user)\n    this.local.clear();\n    this.local.set(\"names\", this.names);\n  }\n  \n  //the currently picked name\n  pickedname = \"\";\n  \n  //random number between min and max \n  random(min , max){  \n    var random = Math.floor(Math.random() * (+max - +min)) + +min;\n    return random;\n  }\n  \n  //picks a random name to be chosen\n  pickrandom(){\n    this.pickedname = this.names[this.random(0, this.names.length)]\n  }\n}\n"],"sourceRoot":""}